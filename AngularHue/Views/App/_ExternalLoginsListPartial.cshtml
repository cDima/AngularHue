@using Microsoft.Owin.Security

<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        <md-button ng-click="signInGoogle()">Google</md-button>

    <button class="btn btn-large btn-facebook btn-block"
            type="button"
            data-ng-click="authExternalProvider('Facebook')">
        <i class="fa fa-facebook"></i> | Connect with Facebook
    </button>
    <button class="btn btn-large btn-google-plus btn-block" type="button"
            data-ng-click="authExternalProvider('Google')">
        <i class="fa fa-google-plus"></i> | Connect with Google+
    </button>


        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = "#/externallogin" }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders) {
                        <button type="submit" class="btn btn-default"
                                id="@p.AuthenticationType" name="provider"
                                value="@p.AuthenticationType"
                                title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                </p>
            </div>
        }
    }
}
